variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  LATEST_IMAGE_TAG: '1.37'
  MINIMUM_IMAGE_TAG: '1.36'

stages:
  - check
  - lint
  - build
  - test
  - doc

cache:
  paths:
    - $CARGO_HOME
  key: rav1e-${CI_COMMIT_REF_SLUG}

before_script:
  - ls target/ || true
  - ls $CARGO_HOME || true
  - rustc --version
  - nasm --version
  - aomenc --help | grep 'AOMedia Project AV1 Encoder'
  - dav1d --version
  - kcov --version

image: registry.gitlab.xiph.org/xiph/rav1e-docker/rust-rav1e:$LATEST_IMAGE_TAG

Latest Stable Rustc:
  stage: check
  tags:
    - docker
    - alpine
  script:
    - cargo check --features=decode_test,decode_test_dav1d,quick_test --tests
  artifacts:
    paths:
      - target/
      - Cargo.lock
    expire_in: 4 hours

Minimum Rustc:
  image: registry.gitlab.xiph.org/xiph/rav1e-docker/rust-rav1e:$MINIMUM_IMAGE_TAG
  stage: check
  tags:
    - docker
    - alpine
  script:
    - cargo check --features=decode_test,decode_test_dav1d,quick_test --tests

No Default Features:
  stage: check
  tags:
    - docker
    - alpine
  script:
    - cargo check --no-default-features

CAPI and Debugging Features:
  stage: check
  tags:
    - docker
    - alpine
  script:
    - cargo check --features=capi,dump_lookahead_data

Compile Benchmarks:
  stage: check
  tags:
    - docker
    - alpine
  script:
    - cargo check --features=bench --benches

Clippy Lints:
  stage: lint
  dependencies:
    - Latest Stable Rustc
  tags:
    - docker
    - alpine
  script:
    - touch src/lib.rs # Ensure cargo re-checks rav1e, since we ran `cargo check` earlier
    - >-
      cargo clippy -- -D warnings

Code Styles:
  stage: lint
  tags:
    - docker
    - alpine
  script:
    - cargo fmt -- --check

Build rav1e:
  stage: build
  dependencies:
    - Latest Stable Rustc
  tags:
    - docker
    - alpine
  script:
    - RUSTFLAGS="-C link-dead-code" cargo build --features=decode_test,decode_test_dav1d,quick_test --tests
  artifacts:
    paths:
      - target/
      - Cargo.lock
    expire_in: 4 hours

Coveralls Tests:
  stage: test
  dependencies:
    - Build rav1e
  tags:
    - docker
    - alpine
  variables:
    CI_NAME: Gitlab
    CI_BUILD_NUMBER: "$CI_PIPELINE_ID"
    CI_BUILD_URL: "$CI_PIPELINE_URL"
    CI_BRANCH: "$CI_COMMIT_REF_NAME"
    CI_PULL_REQUEST: "$CI_MERGE_REQUEST_ID"
    # This is named "Travis", but it also allows cargo-kcov to use a repo_token to push to Coveralls
    TRAVIS_JOB_ID: ""
  script:
    # Currently not pushing to coveralls. Add `--coveralls` to the first half when ready to enable.
    # Requires TRAVIS_JOB_ID to be set to coveralls repo_token (via Gitlab secrets) first.
    - cargo kcov -v --no-clean-rebuild -- --verify --exclude-pattern="$HOME/.cargo,aom_build,.h,test"

Slow Tests (aom):
  stage: test
  dependencies:
    - Latest Stable Rustc
  tags:
    - docker
    - alpine
  script:
    - cargo test --release --features=decode_test --color=always -- --color=always --ignored

Slow Tests (dav1d):
  stage: test
  dependencies:
    - Latest Stable Rustc
  tags:
    - docker
    - alpine
  script:
    - cargo test --release --features=decode_test_dav1d --color=always -- --color=always --ignored

Generate Docs:
  stage: doc
  dependencies:
    - Latest Stable Rustc
  tags:
    - docker
    - alpine
  script:
    - cargo doc --no-deps
  artifacts:
    paths:
      - target/doc/
    expire_in: 1 week
