name: js_api
on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
jobs:
    build-pack-test:
        name: wasm-pack build, pack, test

        strategy:
            matrix:
                conf: [build, firefox, chrome, node]
                include:
                    - conf: firefox
                      headless: --headless
                      driver: --geckodriver ./geckodriver
                    - conf: chrome
                      headless: --headless

        env:
            RUST_BACKTRACE: 1
            RUSTC_WRAPPER: sccache
            SCCACHE_CACHE_SIZE: 300M
            SCCACHE_DIR: /home/runner/.cache/sccache
            SCCACHE_IDLE_TIMEOUT: 0
            RAV1E_JS_DIR: rav1e_js

        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@master

            - name: Install sccache
              env:
                  LINK: https://github.com/mozilla/sccache/releases/download
                  SCCACHE_VERSION: 0.2.13
              run: |
                  SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
                  mkdir -p $HOME/.local/bin
                  curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
                  mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
                  echo "::add-path::$HOME/.local/bin"

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: 1.46.0
                  override: true
                  target: wasm32-unknown-unknown

            - name: Generate Cargo.lock and Cargo.version
              run: |
                  cargo update
                  cargo --version > Cargo.version

            - name: Cache cargo registry
              uses: actions/cache@v2
              continue-on-error: true
              with:
                  path: ~/.cargo/registry/cache
                  key: ${{ runner.os }}-${{ matrix.conf }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ matrix.conf }}-cargo-registry-

            - name: Cache sccache output
              uses: actions/cache@v2
              continue-on-error: true
              with:
                  path: /home/runner/.cache/sccache
                  key: ${{ runner.os }}-${{ matrix.conf }}-sccache-${{ hashFiles('**/Cargo.*') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ matrix.conf }}-sccache-

            - name: Start sccache server
              run: |
                  sccache --start-server

            - name: Set up wasm-pack
              run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

            # BUILD & PACK
            - name: Build
              if: matrix.conf == 'build'
              working-directory: ${{ env.RAV1E_JS_DIR }}
              # --dev needed, because of https://github.com/rustwasm/wasm-pack/issues/886
              run: wasm-pack build --dev

            - name: Pack
              if: matrix.conf == 'build'
              working-directory: ${{ env.RAV1E_JS_DIR }}
              run: wasm-pack pack

            # TESTING
            - name: Use Node.js 14
              if: matrix.conf == 'node' || matrix.conf == 'build'
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            # needed because of # https://github.com/rustwasm/wasm-bindgen/issues/2261
            - name: Install geckodriver
              if: matrix.conf == 'firefox'
              working-directory: ${{ env.RAV1E_JS_DIR }}
              env:
                  LINK: https://github.com/mozilla/geckodriver/releases/download
                  GECKO_VERSION: v0.26.0
              run: |
                  GECKO_FILE=geckodriver-$GECKO_VERSION-linux64
                  curl -L "$LINK/$GECKO_VERSION/$GECKO_FILE.tar.gz" | tar xz

            - name: Test ${{ matrix.conf }} (${{ matrix.headless }})
              if: matrix.conf != 'build'
              working-directory: ${{ env.RAV1E_JS_DIR }}
              run: wasm-pack test --${{ matrix.conf }} ${{ matrix.headless }} ${{ matrix.driver }}

            - name: Install and Build JavaScript
              if: matrix.conf == 'build'
              working-directory: ${{ env.RAV1E_JS_DIR }}/www
              run: |
                  yarn install
                  yarn build

            # STOP SCCACHE
            - name: Stop sccache server
              run: |
                  sccache --stop-server
