name: deploy

on:
  push:
    tags:
      - 'v*.*.*'
      - 'p*'

jobs:
  create-binaries:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install nasm
      run: |
        $NASM_VERSION="2.14.02"
        $NASM_LINK="https://www.nasm.us/pub/nasm/releasebuilds"
        curl -LO "$NASM_LINK/$NASM_VERSION/win64/nasm-$NASM_VERSION-win64.zip"
        7z e -y "nasm-$NASM_VERSION-win64.zip" -o"C:\nasm"
        echo "::add-path::C:\nasm"

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable-x86_64-pc-windows-gnu
        override: true

    - name: Install cargo-c
      run: |
        cargo install cargo-c

    - name: Build rav1e
      run: |
        cargo build --release

    - name: Run cargo-c
      run: |
        cargo cinstall --release --destdir="C:\"

    - name: Create zip
      run: |
        $RAV1E_PATH="$Env:GITHUB_WORKSPACE\target\release"
        7z a rav1e.zip "Cargo.lock" "$RAV1E_PATH\rav1e.exe" "C:\usr\local"

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: rav1e-binaries
        path: rav1e.zip

  deploy:

    needs: create-binaries

    env:
      FILENAME: rav1e-windows-sdk

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download the zip
      uses: actions/download-artifact@v2
      with:
        name: rav1e-binaries

    - name: Unzip rav1e Windows binaries
      run: |
        unzip rav1e-binaries/rav1e.zip -d rav1e-binaries
        mv rav1e-binaries/Cargo.lock .

    - name: Handle binaries
      run: |
        mv rav1e-binaries/local rav1e-binaries/$FILENAME
        strip rav1e-binaries/rav1e.exe

    - name: Package pre-release binaries
      if: startsWith(github.ref, 'refs/tags/p')
      run: |
        cd rav1e-binaries
        zip -r rav1e-windows.zip $FILENAME

    - name: Package release binaries
      if: startsWith(github.ref, 'refs/tags/v')
      id: data
      run: |
        VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)
        echo "::set-output name=version::$VERSION"
        cd rav1e-binaries
        zip -r rav1e-$VERSION-windows.zip $FILENAME

    - name: Create a pre-release
      if: startsWith(github.ref, 'refs/tags/p')
      uses: softprops/action-gh-release@v1
      with:
        name: Weekly pre-release
        prerelease: true
        files: |
          Cargo.lock
          rav1e-binaries/rav1e-windows.zip
          rav1e-binaries/rav1e.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create a release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ steps.data.outputs.version }}
        files: |
          Cargo.lock
          rav1e-binaries/rav1e-${{ steps.data.outputs.version }}-windows.zip
          rav1e-binaries/rav1e.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
